{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["'use strict';\n\n/**\n * Created by User on 2016/3/24.\n */\n\nrequire('source-map-support').install();\nrequire('babel-polyfill');\n\nconst isDebug = true;\nconst fakeAuthCode = true;\n\nconst _ = require('lodash');\nconst path = require('path');\n\n\nrequire('./time.js');\n\n\nlet twilioClient = require('twilio')(\"AC7161db8bee36103cc7d6c29fe33404ec\", \"1c76b95b0c1f28236cb262e6b32ba8ab\");\n\nlet authCodes = []; //{phone  : String , authCode: String , endTime : Number , triedTimes:Numbers}\n\nlet nodemailer = require('nodemailer');\n\nlet mailTransport = nodemailer.createTransport({\n    service: 'Gmail',\n    auth: {\n        user: 'o.grpbuy@gmail.com',\n        pass: 'asd1q2w3e'\n    }\n});\n\nlet MongoClient = require('mongodb').MongoClient;\n\n// Connection URL\nlet mongoUrl = 'mongodb://localhost:27017/onigiri';\nlet mongoDb = null;\nlet InMemoryDatabase = require('./database.js');\nlet db = null;\n\nlet Server = async function (option) {\n    console.log('database connecting!');\n\n    await MongoClient.connect(mongoUrl).then(_db=> {\n        mongoDb = _db;\n\n        db = new InMemoryDatabase(mongoDb, option||{});//不能提前赋值,因为js传递引用的副本\n\n        console.log('database connected!');\n    }).catch(e=> {\n        console.log(e);\n        progress.exit(1);\n    });\n\n    //清空空白团\n    setInterval(()=> {\n        //得到所有沒過期的團\n        let availableGroups = _.filter(db.GROUP, grp=>grp.grpStatus === 0 || grp.grpStatus === 1);\n\n        for (let g of availableGroups) {\n            let deadLine = new Date(g.grpTime);\n            if (deadLine.getTime() - new Date().getTime() < 0) {\n                db.setValueToDb('GROUP', row=>row.grpId === g.grpId, 'grpStatus', -1);\n            }\n        }\n    }, 5000);\n\n\n    let express = require('express');\n    let bodyParser = require('body-parser');\n\n    let app = express();\n\n\n    let self = this;\n\n    //this.db = isDebug ? db : undefined;??????????????????????????????????????????????????\n\n    this.getDb = function(){\n        return db;\n    };\n\n\n    let allowCrossDomain = function (req, res, next) {\n        res.header('Access-Control-Allow-Origin', '*');\n        res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n        res.header('Access-Control-Allow-Headers', 'Content-Type');\n        next();\n    };\n\n\n\n\n    app.use(allowCrossDomain);//CORS middleware\n    app.use(bodyParser.urlencoded({extended: false}));\n\n    app.use(express.static('public'));\n    app.use(bodyParser.urlencoded({extended: false}));\n\n    app.get('/db', function (req, res) {\n        if (isDebug) {\n            res.json(db);\n        }\n    });\n\n    app.post('/addUser', function (req, res) {\n\n            req.body = JSON.parse(req.body.data);\n\n            let usrName = req.body.usrName;\n            let usrPwd = req.body.usrPwd;\n            let usrMail = req.body.usrMail;\n            let usrMobi = req.body.usrMobi;\n            let authCode = req.body.authCode;\n\n\n            if (!usrName || !usrPwd || !usrMobi || !authCode) {\n                res.json({success: false, msg: '資料填寫不完整!'});\n                return;\n            }\n\n            let result = authCodes.find(obj=>obj.phone === usrMobi);\n            if (!result) {\n                res.json({success: false, msg: '請驗證手機號碼'});\n                return;\n            } else if (result.authCode !== authCode) {\n                result.triedTimes++;\n                if (result.triedTimes === 3) {\n                    authCodes.splice(authCodes.findIndex(obj=>obj.phone === usrMobi), 1);\n                }\n                res.json({success: false, msg: '驗證碼輸入錯誤'});\n                return;\n            } else if (db.USER.find(o=>o.usrName === usrName)) {\n                res.json({success: false, msg: '帳號名稱重複'});\n                return;\n            }\n\n\n            //console.log(JSON.stringify(req.body));\n            self.addUser(usrName, usrPwd, usrMail, usrMobi, function (result) {\n                res.json(result);\n            });\n        }\n    );\n\n    app.post('/merchant', function (req, res) {\n\n            req.body = JSON.parse(req.body.data);\n\n            let metName = req.body.metName;\n            let metPhone = req.body.metPhone;\n            let metMinPrice = Number(req.body.metMinPrice);\n            let metPicUrl = req.body.metPicUrl || '';\n            let metType = req.body.metType || '其他';\n\n\n            if (!(metName && metPhone && metMinPrice !== null && metMinPrice >= 0)) {\n                res.json({success: false, msg: '資料輸入錯誤'});\n                return;\n            }\n\n            self.addMerchantPromise({metName, metPhone, metMinPrice, metPicUrl, metType}).then((merchant)=> {\n                res.json({success: true, merchant});\n            }).catch(()=>res.json({success: false}));\n\n        }\n    );\n\n    app.post('/dishes', function (req, res) {\n\n            req.body = JSON.parse(req.body.data);\n\n            console.log(JSON.stringify(req.body));\n\n            for (let dish of req.body) {\n                dish.dihPrice = Number(dish.dihPrice);\n\n                if (!(dish.dihName && dish.dihPrice !== null && dish.metId !== null)) {\n                    res.json({success: false, msg: '資料不完整'});\n                    return;\n                }\n\n                if (dish.dihPrice < 0) {\n                    res.json({success: false, msg: '商品價格不正確'});\n                    return;\n                }\n            }\n\n            req.body = req.body.map(row=> {\n                row.dihType = row.dihType || '主食';\n                return row;\n            });\n\n\n            self.addDishPromise(req.body).then((result)=> {\n                res.json({success: true, dishes: result});\n            }).catch(()=>res.json({success: false}));\n\n        }\n    );\n\n    app.post('/userAuth', function (req, res) {\n            let usrName = req.body.usrName;\n            let usrPwd = req.body.usrPwd;\n\n            if (!(usrName && usrPwd)) {\n                res.json({success: false, msg: '資料不完整'});\n                return;\n            }\n\n            //console.log(JSON.stringify(req.body));\n\n            self.userAuth(usrName, usrPwd, function (result) {\n                res.json(result);\n            });\n\n        }\n    );\n\n    app.get('/allGroup', function (req, res) {\n        // Pass to next layer of middleware\n        self.allAvailableGroup(function (result) {\n            res.json(result);\n        });\n    });\n\n    app.get('/groupById/:id', (req, res)=> {\n        self.getGroupById(Number(req.params.id), result=>res.json(result));\n    });\n\n    app.get('/unjoinedGroups/:usrId', (req, res)=> {\n        self.getUnjoinedGroups(Number(req.params.usrId), result=>res.json(result));\n    });\n\n    app.get('/allMerchant', function (req, res) {\n        // Pass to next layer of middleware\n        self.allMerchant(function (result) {\n            res.json(result);\n        });\n    });\n\n    app.get('/merchantById/:id', function (req, res) {\n        // Pass to next layer of middleware\n\n        self.getMerchantById(Number(req.params.id), function (result) {\n            res.json(result);\n        });\n    });\n\n    app.get('/cancelOrder/:grpId/:usrId', function (req, res) {\n        let grpId = Number(req.params.grpId);\n        let usrId = Number(req.params.usrId);\n        let ordStatus = db.ORDER.find(o=>o.grpId === grpId && o.usrId === usrId).ordStatus;\n\n        //例外判断, 只有待审查的订单可以被取消\n        if (ordStatus === 0) {\n            db.setValueToDb('ORDER', o=>o.grpId === grpId && o.usrId === usrId, 'ordStatus', -2);\n            res.json({success: true});\n        } else {\n            if (ordStatus === -2) {\n                res.json({success: false, err: '訂單已被取消'});\n            } else {\n                res.json({success: false, err: '訂單已被確認,無法取消'});\n            }\n        }\n    });\n\n\n    app.post('/group', function (req, res) {\n\n            //console.log(req.body);\n\n            req.body = JSON.parse(req.body.data);\n            let grpHostId = Number(req.body.grpHostId);\n            let dishes = req.body.dishes;\n            let metId = Number(req.body.metId);\n            let addr = req.body.addr;\n            let gorTime = req.body.gorTime;\n            let grpAmountLimit = Number(req.body.grpAmountLimit) || 0;\n\n            //TODO Check Time\n            let deadLine = new Date(gorTime.replace(/(\\d*)年(\\d*)月(\\d*)日\\,/gi, '$1/$2/$3'));\n            gorTime = deadLine.getTime();\n\n            if (gorTime < new Date().getTime()) {\n                res.json({success: false, msg: '截止時間不能早於當前時間'});\n                return;\n            }\n\n\n            if (!( grpHostId !== null && dishes && metId && addr && gorTime)) {\n                res.json({success: false, msg: '資料不完整'});\n                console.log({grpHostId, dishes, metId, addr, gorTime})\n                return;\n\n            }\n\n\n            self.postGroup(grpHostId, dishes, metId, addr, gorTime, grpAmountLimit, function (result) {\n                res.json(result);\n            });\n\n        }\n    );\n\n    app.post('/joinGroup', function (req, res) {\n            req.body = JSON.parse(req.body.data);\n            let usrId = Number(req.body.usrId);\n            let dishes = req.body.dishes;\n            let grpId = req.body.grpId;\n            let comments = req.body.comments;\n\n            if (!(usrId !== null && dishes && dishes.length !== 0 && grpId)) {\n                res.json({success: false, msg: '資料不完整'});\n                return;\n            }\n\n\n            self.joinGroupPromise(usrId, dishes, grpId, comments).then(result=> {\n                res.json(result);\n            }).catch(e=> {\n                console.log(e);\n                res.json(e);\n            });\n\n        }\n    );\n\n    app.post('/groupStatus', function (req, res) {\n            req.body = JSON.parse(req.body.data);\n            let grpId = Number(req.body.grpId);\n            let grpStatus = Number(req.body.grpStatus);\n            if (!(grpId !== null && grpStatus !== null)) {\n                res.json({success: false, msg: '資料不完整'});\n                return;\n            }\n\n            self.updateGroupStatusPromise(grpId, grpStatus).then(result=> {\n                res.json(result);\n            }).catch(e=> {\n                res.json(e);\n            });\n\n        }\n    );\n\n    app.post('/mobiAuth', function (req, res) {\n            let usrMobi = req.body.data;\n            if (!usrMobi) {\n                res.json({success: false, msg: '資料不完整'});\n                return;\n            }\n\n            self.getTwilioCode(usrMobi).then(result=> {\n                res.json({success: true});\n            }).catch(e=> {\n                res.json(e);\n            });\n\n        }\n    );\n\n\n    app.get('/groupedOrdersByUserId/:id', function (req, res) {\n            let usrId = Number(req.params.id);\n            self.getGroupedOrdersByUserId(usrId, result=> {\n                //console.log(result);\n                res.json(result);\n            });\n        }\n    );\n\n    app.get('/groupedOrdersAndSumsByHostId/:id', function (req, res) {\n            let usrId = Number(req.params.id);\n\n            self.getGroupedOrdersAndSumsByHostIdPromise(usrId).then(result=>res.json(result));\n        }\n    );\n\n    app.get('/follow/:usrId/:hostId', function (req, res) {\n        try {\n            let usrId = Number(req.params.usrId);\n            let hostId = Number(req.params.hostId);\n\n            if (db.FOLLOW.find(f=>f.usrId === usrId && f.hostId === hostId)) {\n                db.delFromJsonDb('FOLLOW', f=>f.usrId === usrId && f.hostId === hostId);\n                res.json({success: true});\n                return;\n            }\n\n            let fowId = db.FOLLOW.length === 0 ? 0 : _.maxBy(db.FOLLOW, \"fowId\").fowId + 1;\n            db.pushToDbPromise('FOLLOW', {\n                fowId,\n                usrId: usrId,\n                hostId: hostId\n            }).then(()=> res.json({success: true})\n            ).catch(e=> res.json({err: e.toString()}));\n\n        } catch (e) {\n            console.log(e.toString());\n            res.json({success: false, err: e.toString()});\n\n        }\n\n\n    });\n\n\n    app.get('/followStatus/:usrId/:hostId', function (req, res) {\n        try {\n            let usrId = req.params.usrId;\n            let hostId = req.params.hostId;\n\n            if (db.FOLLOW.find(f=>f.usrId === usrId && f.hostId === hostId)) {\n                res.json({followed: true});\n            } else {\n                res.json({followed: false});\n            }\n\n\n        } catch (e) {\n            console.log(e.toString());\n            res.json({err: e.toString()});\n\n        }\n\n    });\n\n    app.post('/updateOrdStatus', function (req, res) {\n        req.body = JSON.parse(req.body.data);\n        let ordId = Number(req.body.ordId);\n        let ordStatus = Number(req.body.ordStatus);\n        // console.log(\"ordId:\" + ordId + \",ordStatus:\" + ordStatus);\n\n        self.updateOrdStatusPromise(ordId, ordStatus).then(result=> {\n            res.json(result);\n        }).catch(e=> {\n            res.json(e);\n        });\n    });\n\n    app.get('/confirmOrder/:id', function (req, res) {\n        let usrId = Number(req.params.id);\n\n        self.confirmOrder(usrId).then(result=>res.json(result));\n    });\n\n    app.get('/grpUsersOrdersByHostId/:hostId', function (req, res) {\n        let hostId = Number(req.params.hostId);\n        let from = Number(req.query.from);\n        self.getGrpUsersOrdersByHostIdPromise(hostId, from).then(result=>res.json(result));\n    });\n\n    app.post('/getGrpMember', function (req, res) {\n        req.body = JSON.parse(req.body.data);\n        let gmrId = Number(req.body.gmrId);\n        let comStatus = Number(req.body.comStatus);\n\n        self.getComment(gmrId, comStatus).then(result=> {\n            res.json(result);\n        }).catch(e=> {\n            res.json(e);\n        });\n\n    });\n\n    app.post('/refuseOrder', function (req, res) {\n        req.body = JSON.parse(req.body.data);\n        let usrId = Number(req.body.usrId);\n        let grpId = Number(req.body.grpId);\n        let usrOrds = req.body.usrOrds;\n        console.log('usrId , grpId', usrId, grpId);\n\n        self.refuseOrder(usrId, grpId, usrOrds, result=> {\n            res.json(result);\n        });\n    });\n\n\n    app.listen(8080, function () {\n        console.log('' +\n            'app listening on port 8080!');\n    });\n\n    this.addDishPromise = function  (dishes) {\n\n        return new Promise((resolve, reject)=> {\n            for (let dish of dishes) {\n                dish.dihId = _.maxBy(db.DISH, \"dihId\").dihId + 1;\n                db.pushToDb('DISH', dish);\n            }\n            resolve(dishes);\n        });\n    };\n\n    this.getTwilioCode = function (userMobi) {\n        return new Promise(function (resolve, reject) {\n            let min = 100;\n            let max = 999;\n            let randomAuth = Math.floor(Math.random() * (max - min + 1) + min) + '';\n            if (fakeAuthCode) {\n                randomAuth = '123';\n                resolve('123');\n                authCodes.push({\n                    phone: userMobi,\n                    authCode: randomAuth,\n                    endTime: new Date().getTime() + 1000 * 60 * 5,\n                    triedTimes: 0\n                });\n\n                setTimeout(()=> {\n                    let indexOfAuthCode = authCodes.findIndex(obj=>obj.authCode === authCodes);\n                    if (indexOfAuthCode) {\n                        authCodes.splice(indexOfAuthCode, 1);\n                    }\n                }, 1000 * 60 * 5);\n                return;\n            }\n\n            twilioClient.messages.create({\n                body: '您的販團驗證碼是' + randomAuth,\n                to: '+886' + userMobi,  // Text this number\n                from: '+13342030485' // From a valid Twilio number\n            }, function (err, message) {\n                if (err) {\n                    console.log(err);\n                    reject(randomAuth);\n                } else {\n                    console.log(message && message.sid);\n                    resolve(randomAuth);\n                    authCodes.push({\n                        phone: userMobi,\n                        authCode: randomAuth,\n                        endTime: new Date().getTime() + 1000 * 60 * 5,\n                        triedTimes: 0\n                    });\n\n                    setTimeout(()=> {\n                        let indexOfAuthCode = authCodes.findIndex(obj=>obj.authCode === authCodes);\n                        if (indexOfAuthCode) {\n                            authCodes.splice(indexOfAuthCode, 1);\n                        }\n                    }, 1000 * 60 * 5);\n                }\n            });\n\n\n        });\n    };\n\n    this.addUser = function (usrName, usrPwd, usrMail, usrMobi, callback) {\n        let usrId = 0;\n\n        for (let user of db.USER) {\n            if (user.usrId > usrId) {\n                usrId = user.usrId;\n            }\n            usrId = Number(usrId) + 1;\n        }\n\n\n        let usrCreateTime = new Date().toString();\n        let newUser = {\n            usrId: usrId,\n            usrName: usrName,\n            usrPwd: usrPwd,\n            usrMail: usrMail,\n            usrCreateTime: usrCreateTime,\n            usrMobi: usrMobi\n        };\n\n\n        if (newUser.usrName.length !== 0 && newUser.usrPwd.length !== 0 && newUser.usrMobi.length === 10) {\n            db.pushToDb('USER', newUser);\n            callback({success: true});\n        } else {\n            callback({success: false});\n        }\n    };\n\n    /*\n     * 參數\n     {metName,\n     metPhone,\n     metMinPrice,\n     metPicUrl,\n     metType}\n     */\n\n    this.addMerchantPromise = function (merchant) {\n        return new Promise((resolve, reject)=> {\n            merchant.metId = _.maxBy(db.MERCHANT, 'metId').metId + 1;\n\n            db.pushToDb('MERCHANT', merchant);\n\n            resolve(merchant);\n\n        });\n    };\n\n    this.userAuth = function (usrName, usrPwd, callback) {\n        let isSuccess = false;\n        for (let index in db.USER) {\n            if (db.USER[index].usrName == usrName && db.USER[index].usrPwd == usrPwd) {\n                callback({\n                    success: 1,\n                    user: {\n                        usrName: db.USER[index].usrName,\n                        usrId: db.USER[index].usrId,\n                        usrMobi: db.USER[index].usrMobi\n                    }\n                });\n                return;\n            }\n        }\n\n        if (!isSuccess) {\n            callback({success: false, err: '帳號密碼不匹配'});\n        }\n    };\n\n    //unjoined and available groups by user id\n    this.getUnjoinedGroups = function (usrId, callback) {\n        let that = this;\n\n        let joinedGroupIds = _.uniqBy(db.ORDER.filter(ord=>ord.usrId === usrId), 'grpId').map(ord=>ord.grpId);\n\n        //包含了已经结束的团\n        let allUnjoinedGroups = db.GROUP.filter(grp=> !joinedGroupIds.find(grpId=>grpId === grp.grpId));\n\n        //并不是标准类别\n        let unjoinedAndAvailable = allUnjoinedGroups.filter(g=>g.grpStatus === 0 || g.grpStatus === 1);\n\n        let stdGroups = unjoinedAndAvailable.map(g=>that.createClassGroupByGroupId(g.grpId));\n\n\n        callback(_.sortBy(stdGroups, row=>-new Date(row.grpTime)));\n    };\n\n    this.allGroup = function (callback) {\n        let result = [];\n\n        for (let _group of db.GROUP) {\n            let group = this.createClassGroupByGroupId(_group.grpId);\n            result.push(group);\n\n        }\n        callback(result);\n    };\n\n    this.allAvailableGroup = function (callback) {\n        let result = [];\n\n        for (let _group of db.GROUP.filter(g=>g.grpStatus === 0 || g.grpStatus === 1)) {\n            let group = this.createClassGroupByGroupId(_group.grpId);\n            result.push(group);\n        }\n\n        callback(_.sortBy(result, row=>-new Date(row.grpTime)));\n    };\n\n    this.getGroupById = function (id, callback) {\n        let group = this.createClassGroupByGroupId(id);\n        callback(group);\n    };\n\n\n    this.allMerchant = function (callback) {\n        let result = [];\n        for (let _merchant of db.MERCHANT) {\n            let merchant = this.createClassMerchantById(_merchant.metId);\n            result.push(\n                merchant\n            );\n        }\n        callback(result);\n    };\n\n\n    this.getMerchantById = function (id, callback) {\n        let merchant = this.createClassMerchantById(id);\n        callback(merchant);\n    };\n\n    this.postGroup = function (grpHostId, dishes, metId, addr, gorTime, grpAmountLimit, callback) {\n        let lastGroup = _.maxBy(db.GROUP, 'grpId');\n        let grpId = lastGroup ? lastGroup.grpId + 1 : 1;\n        db.pushToDb('GROUP', {\n            grpId,\n            grpHostId: grpHostId,\n            metId: metId,\n            grpAddr: addr,\n            grpTime: gorTime,\n            grpStatus: 0,\n            grpCreateTime: new Date().getTime(),\n            grpAmount: 0,\n            grpAmountLimit: grpAmountLimit || 0\n\n            //minAmount: minAmount\n        });\n        for (let dihId of dishes) {\n            let lastDish = _.maxBy(db.GROUP_DISHES, 'gdeId');\n            let gdh = {\n                gdeId: lastDish ? lastDish.gdeId + 1 : 1,\n                dihId: Number(dihId),\n                grpId\n            };\n            db.pushToDb(\"GROUP_DISHES\", gdh);\n        }\n\n\n        //发送信息给follow的人\n        let usrIds = db.FOLLOW.filter(f=>f.hostId === grpHostId);\n        console.log('usrIds grpHostId', JSON.stringify(usrIds), grpHostId);\n        if (usrIds.length !== 0) {\n            // for (let usr of db.USER.filter(u=>_.includes(usrIds, u.usrId))) {\n            for (let usr of usrIds) {\n                let usrMail = db.USER.find(u=>u.usrId === usr.usrId).usrMail;\n                let time = new Date(gorTime);\n                self.sendMail(usrMail, '您關注的團主開團啦', `<p>您關注的團主開團啦,\n                <p>團主名稱為: ${db.USER.find(u=>u.usrId === grpHostId).usrName}</p>\n                <p>店家: ${db.MERCHANT.find(m=>m.metId === metId).metName}</p>\n                <p>截止時間: ${(time.getMonth() + 1)}/${time.getDate()} ${time.getHours()}:${(time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes())}</p>\n                <p>領取地點: ${addr}</p>\n                <br><br><br><p>信件由販團系統自動發送: <a href=\"http://bit.do/groupbuy\">http://bit.do/groupbuy</a> </p>`);\n            }\n        }\n\n\n        callback({success: 1});\n    };\n\n    this.joinGroupPromise = function (usrId, dishes, grpId, comments) {\n        //console.log(JSON.stringify({usrId, dishes, grpId}));\n\n\n        return new Promise((resolve, reject)=> {\n            //拒絕用戶對同壹個group連續點兩次餐點\n            //if (db.ORDER.find(ord=>ord.usrId === usrId && ord.grpId === grpId)) {\n            //    reject(\"重復加團!\");\n            //    return;\n            //}\n\n            //只有0,1状态的团可以团购\n            if (!_.includes([0, 1], db.GROUP.find(grp=>grp.grpId === grpId).grpStatus)) {\n                reject(\"團購已經截止!\");\n                return;\n            }\n\n            //是否超过最高上限\n            let amountThisTime = 0;\n            let funcFindDish = dih=> d=>d.dihId === dih.dihId;\n            for (let dih of dishes) {\n                amountThisTime += db.DISH.find(funcFindDish(dih)).dihPrice * dih.num;\n            }\n            let grpAmountLimit = Number(db.GROUP.find(grp=>grp.grpId === grpId).grpAmountLimit);\n            let grpAmount = db.GROUP.find(grp=>grp.grpId === grpId).grpAmount;\n            if (grpAmountLimit !== 0 && amountThisTime + grpAmount > grpAmountLimit) {\n                //團購上限\n                reject('超過團購上限! 超出' + (amountThisTime + grpAmount - grpAmountLimit) + '元');\n                return;\n            } else {\n                //最小外送金額\n                let g = db.GROUP.find(g=>g.grpId === grpId);\n                let metId = g.metId;\n                let metMinPrice = db.MERCHANT.find(m=>m.metId === metId).metMinPrice;\n                db.setValueToDb(\"GROUP\", row=>row.grpId === grpId, \"grpAmount\", amountThisTime + grpAmount);\n                if (amountThisTime + grpAmount >= metMinPrice) {\n                    db.setValueToDb(\"GROUP\", row=>row.grpId === grpId, \"grpStatus\", 1);\n                }\n\n            }\n\n            let usrName = db.USER.find(usr=>usr.usrId === usrId).usrName;\n            let addOrd = function (usrName, dihId, num, ordStatus) {\n                let lastOrder = _.maxBy(db.ORDER, 'ordId');\n\n                db.pushToDb(\"ORDER\", {\n                    ordId: lastOrder ? lastOrder.ordId + 1 : 1,\n                    grpId: grpId,\n                    usrId: usrId,\n                    usrName: usrName,  //07.03 add\n                    dihId: dihId,\n                    ordNum: num,\n                    ordCreateTime: new Date().getTime(),\n                    // ordStatus為訂單狀態(-1:拒絕,0:待審查,1:已確認=未付款,2:已付款)\n                    ordStatus: ordStatus\n                });\n            };\n\n            let orderedDishIds = _.chain(db.ORDER).filter(ord=>ord.usrId === usrId && ord.grpId === grpId).map(ord=>ord.dihId).value();\n            // let selectRowByDishId = dihId => row=>row.dihId === dihId;\n            let isSend = !db.GROUP_MEMBER.find(usr => usr.usrId === usrId && usr.grpId === grpId);   //加購不通知\n\n            let g = db.GROUP.find(g=>g.grpId === grpId);\n            let hostId = g.grpHostId;\n            let ordStatus = usrId === hostId ? 1 : 0; //團主訂單不需要經過確認\n\n            // 加購情況(有舊訂單):\n            // ordStatus==-1(拒絕) --->(both)新增另一張訂單\n            // ordStatus==0 (待審查)-->(相同商品)直接修改\n            //                                      -->(不同商品)新增訂單\n            // ordStatus==1 (已接受)-->(相同商品)增加屬性、改狀態  (both)需再次確認\n            //                                     -->(不同商品)新增訂單\n            let orders = db.ORDER.filter(ord=>ord.usrId === usrId && ord.grpId === grpId && _.includes([0, 1], ord.ordStatus));\n\n            // let orders = db.ORDER.filter(ord=>ord.usrId === usrId && ord.grpId === grpId && ord.ordStatus===0 || ord.ordStatus===1);\n\n            // let orders = db.ORDER.filter(function (ord) {\n            //     if (ord.usrId === usrId && ord.grpId === grpId && (ord.ordStatus === 0 || ord.ordStatus === 1)) {\n            //         console.log('usrId grpId', usrId, grpId);\n            //         console.log('ord.usrId ord.grpId ord.ordStatus', ord.usrId, ord.grpId, ord.ordStatus);\n            //         return ord;\n            //     }\n            // });\n            console.log('joinGroupPromise====orders' + JSON.stringify(orders));\n\n            for (let {dihId, num} of dishes) {\n                if (num === 0 || !_.isNumber(num)) {\n                    continue;\n                }\n\n                // if (orders)\n                console.log('dihId num', dihId, num);\n                if (orders.length === 0) {  //無舊訂單\n                    addOrd(usrName, dihId, num, ordStatus);\n                    console.log('無舊訂單 : ' + grpId, usrId, usrName, dihId, num, ordStatus);\n\n                } else { //有舊訂單\n\n                    let sameProduct = orders.find(ord=>ord.dihId === dihId);\n                    console.log('====sameProduct', JSON.stringify(sameProduct));\n                    if (sameProduct) {\n                        if (sameProduct.ordStatus === 0) {\n                            // ordStatus==0 (待審查)-->(相同商品)直接修改\n                            console.log('ordStatus==0 (待審查)-->(相同商品)直接修改');\n                            db.setValueToDb('ORDER', ord => ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId, 'ordNum',\n                                num + db.ORDER.find(ord => ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId).ordNum);\n                        } else if (sameProduct.ordStatus === 1) {\n                            //  ordStatus==1 (已接受)-->(相同商品)需再次確認\n                            console.log('ordStatus==1 (已接受)-->(相同商品)需再次確認');\n                            db.setValueToDb('ORDER', ord => ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId, 'updateOrdNum', num);\n                            db.setValueToDb('ORDER', ord => ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId, 'ordStatus', 3);\n                            //ordStatus=3 加購中\n                        }\n\n                    } else {\n                        // ordStatus==0 (待審查)-->(不同商品)新增訂單\n                        //  ordStatus==1 (已接受)-->(不同商品)需再次確認\n                        console.log('ordStatus==0、1-->(不同商品)新增訂單');\n                        addOrd(usrName, dihId, num, ordStatus);\n                    }\n\n\n                }\n            }\n\n\n            if (comments) {\n                let lastGroupMember = _.maxBy(db.GROUP_MEMBER, gmr=>gmr.gmrId);\n                db.pushToDb(\"GROUP_MEMBER\", {\n                    gmrId: lastGroupMember ? lastGroupMember.gmrId + 1 : 1,\n                    usrId: usrId,\n                    usrName: usrName,  //07.03 add\n                    grpId: grpId,\n                    comments: comments\n                });\n            }\n\n\n            //最小外送金額\n            // let g = db.GROUP.find(g=>g.grpId === grpId);\n            let metId = g.metId;\n            // let hostId = g.grpHostId;\n            let m = db.MERCHANT.find(m=>m.metId === metId);\n            let metMinPrice = m.metMinPrice;\n            let amount = 0;\n\n            self.getGroupedOrdersAndSumsByHostIdPromise(hostId).then(result=> {\n                // console.log(\"result.groupedOrderSums\"+JSON.stringify(result.groupedOrderSums));\n                let groupOrderSum = result.groupedOrderSums.find(orderSum=>orderSum.group.grpId === grpId);\n                // console.log(\"groupOrderSum\", groupOrderSum);\n\n                if (groupOrderSum) {\n                    for (let orderSum of groupOrderSum.orderSums) {\n                        let price = orderSum.dish.dihPrice;\n                        let num = orderSum.ordNum;\n                        let total = price * num;\n                        amount += total;\n                    }\n                    db.setValueToDb(\"GROUP\", row=>row.grpId === grpId, \"grpAmount\", amount);\n\n                    if (amount >= metMinPrice) {\n                        db.setValueToDb(\"GROUP\", row=>row.grpId === grpId, \"grpStatus\", 1);\n                    }\n                }\n                resolve({success: 1});\n            }).catch(e=>console.log(e));\n\n\n            // console.log('snedornot'+snedornot);\n            // 通知團主 : 有新成員加入  ;  不通知 : 團主加入、團員加購\n            if (usrId !== hostId && isSend) {\n                let hostMail = db.USER.find(usr=>usr.usrId === hostId).usrMail;\n                let metName = m.metName;\n                let subject = '販團 : ' + metName + ' - 有新成員加入!';\n                let now = new Date();\n                let detime = new Date(g.grpTime);\n\n                let html = '<p>申請時間: ' + (now.getMonth() + 1) + '/' + now.getDate() + ' ' + now.getHours() + ':' + (now.getMinutes() < 10 ? '0' + now.getMinutes() : now.getMinutes()) + '</p>' +\n                    '<p>申請人: ' + usrName + '</p>' +\n                    '<p>申請團購: ' + metName + '</p>' +\n                    '<p>團購截止時間: ' + (detime.getMonth() + 1) + '/' + detime.getDate() + ' ' + detime.getHours() + ':' + (detime.getMinutes() < 10 ? '0' + detime.getMinutes() : detime.getMinutes()) + '</p>' +\n                    '<br><br><br><p>信件由販團系統自動發送: <a href=\"http://bit.do/groupbuy\">http://bit.do/groupbuy</a> </p>';\n                self.sendMail(hostMail, subject, html);\n            }\n\n        });\n\n    };\n\n    this.convertOrdersToGroupedOrders = function (orders) {\n        let groupedOrders = [];\n\n        for (let order of orders) {\n\n            // if (order.ordStatus > 0) {\n            // console.log(\"ordStatus:\" + order.ordStatus);\n            let tOrder = groupedOrders.find(gor=>gor.group.grpId === order.grpId);\n\n            if (tOrder) {\n                if (order.ordStatus > 0) {\n                    tOrder.orders.push(order);\n                }\n            } else {\n                let group = this.createClassGroupByGroupId(order.grpId);\n\n                if (order.ordStatus === 0) {\n                    group.ordNotConfirm = true;\n                    groupedOrders.push({group: group, orders: []});\n                } else if (order.ordStatus === -1) {\n                    groupedOrders.push({group: group, orders: []});\n                } else {\n                    groupedOrders.push({group: group, orders: [order]});\n                }\n\n            }\n            // }\n        }\n        return _.sortBy(groupedOrders, row=>-new Date(row.group.grpTime));\n    };\n\n    this.convertOrdersToGroupedOrdersUsr = function (orders) {\n        let groupedOrders = [];\n        for (let order of orders) {\n\n            let tOrder = groupedOrders.find(gor=>gor.group.grpId === order.grpId);\n            if (tOrder) {\n                tOrder.orders.push(order);\n            } else {\n                let group = this.createClassGroupByGroupId(order.grpId);\n\n                //顯示給使用者的狀態\n                let status = '';\n\n                switch (group.grpStatus) {\n                    case 0:\n                    case 1:\n                        switch (order.ordStatus) {\n                            case -1:\n                                status = '被團主拒絕';\n                                break;\n                            case -2:\n                                status = '已取消';\n                                break;\n                            case 0:\n                                status = '等待團主審查';\n                                break;\n                            case 1:\n                                if (group.grpStatus === 0) {\n                                    status = '已確認, 未達到起送金額';\n                                } else {\n                                    status = '等待商家配送';\n                                }\n                                break;\n                            case 2:\n                                status = '付款完成';\n                                break;\n                        }\n                        break;\n                    case 2:\n                        status = '已送達, 待付款';\n                        break;\n                    case 3:\n                        status = '已完成';\n                        break;\n                    case -1:\n                        status = '開團失敗';\n                        break;\n                }\n\n\n                groupedOrders.push({group: group, orders: [order], status: status});\n            }\n        }\n        return _.sortBy(groupedOrders, row=>-new Date(row.group.grpTime));\n    };\n\n\n    this.getGroupedOrdersByUserId = function (usrId, callback) {\n        let orders = _.sortBy(db.ORDER.filter(ord=>ord.usrId === usrId), obj=>-obj.ordCreateTime).map(ord=> {\n\n            let newOrd = {\n                ordId: ord.ordId,\n                grpId: ord.grpId,\n                usrId: ord.usrId,\n                usrName: ord.usrName,   //07.03 add\n                dish: db.DISH.find(d=>d.dihId === ord.dihId),\n                ordNum: ord.ordNum,\n                ordStatus: ord.ordStatus,    //07.03 add\n                ordCreateTime: new Date(ord.ordCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\n\n            };\n            return newOrd;\n        });\n\n        let groupedOrders =\n            self.convertOrdersToGroupedOrdersUsr(orders);\n        callback(groupedOrders);\n    };\n\n    this.getGroupedOrdersAndSumsByHostIdPromise = function (hostId) {\n        let that = this;\n\n        return new Promise(resolve=> {\n            let groupedOrders = [];\n            let groupedOrderSums = [];\n\n\n            let groupIds = db.GROUP.filter(grp=>grp.grpHostId === hostId);\n            let orders = db.ORDER.filter(ord=> {\n                //ord.grpId === groupId\n\n                return db.GROUP.find(grp=>grp.grpId === ord.grpId).grpHostId === hostId;\n            }).map(ord=> {\n\n                let newOrd = {\n                    ordId: ord.ordId,\n                    grpId: ord.grpId,\n                    usrId: ord.usrId,\n                    usrName: ord.usrName,   //07.03 add\n                    dish: db.DISH.find(d=>d.dihId === ord.dihId),\n                    ordNum: ord.ordNum,\n                    ordStatus: ord.ordStatus,    //07.03 add\n                    ordCreateTime: new Date(ord.ordCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\n                    updateOrdNum: ord.updateOrdNum ? ord.updateOrdNum : undefined,\n                };\n\n                return newOrd;\n            });\n\n            //console.log('group',db.GROUP,'groupedOrders', orders);\n\n            groupedOrders =\n                self.convertOrdersToGroupedOrders(orders);\n\n            // console.log(\"ordersordersordersorders:\" + JSON.stringify(orders));\n            // console.log(\"groupedOrdersgroupedOrdersgroupedOrders:\" + JSON.stringify(groupedOrders));\n\n            self.formatOrders(groupedOrders, (result)=> {\n                groupedOrderSums = result;\n            });\n\n\n            //處理空白團\n            let emptyGroups = db.GROUP.filter(grp=> grp.grpHostId === hostId && !db.ORDER.find(ord=>ord.grpId === grp.grpId));\n            if (emptyGroups) {\n                emptyGroups.map(eptGroup=> {\n                    let group = that.createClassGroupByGroupId(eptGroup.grpId);\n                    groupedOrders.push({group, orders: []});\n                    groupedOrderSums.push({group, orderSums: []});\n                });\n            }\n\n            // console.log(\"groupedOrderSumsgroupedOrderSums:\" + JSON.stringify(groupedOrderSums));\n\n            resolve({\n                groupedOrders: _.orderBy(groupedOrders, obj=>obj.group.grpCreateTime, 'desc'),\n                // groupedOrderSums: _.sortBy(groupedOrderSums, obj=>obj.group.grpCreateTime)\n                groupedOrderSums: _.orderBy(groupedOrderSums, obj=>obj.group.grpCreateTime, 'desc')\n                // groupedOrderSums: groupedOrderSums\n            });\n        });\n    };\n\n    this.confirmOrder = function (hostId) {\n        let that = this;\n\n        return new Promise(resolve=> {\n            let groupedOrders = [];\n            let groupedOrderSums = [];\n\n            let groupIds = db.GROUP.filter(grp=>grp.grpHostId === hostId);\n            let orders = db.ORDER.filter(ord=> {\n\n                return db.GROUP.find(grp=>grp.grpId === ord.grpId).grpHostId === hostId;\n            }).map(ord=> {\n\n                let newOrd = {\n                    ordId: ord.ordId,\n                    grpId: ord.grpId,\n                    usrId: ord.usrId,\n                    usrName: ord.usrName,   //07.03 add\n                    dish: db.DISH.find(d=>d.dihId === ord.dihId),\n                    ordNum: ord.ordNum,\n                    ordStatus: ord.ordStatus,    //07.03 add\n                    ordCreateTime: new Date(ord.ordCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\n                    updateOrdNum: ord.updateOrdNum ? ord.updateOrdNum : undefined,\n                };\n                return newOrd;\n            });\n\n            groupedOrders =\n                self.convertOrdersToGroupedOrdersUsr(orders);\n\n            self.formatOrders(groupedOrders, (result)=> {\n                groupedOrderSums = result;\n            });\n\n            //處理空白團\n            let emptyGroups = db.GROUP.filter(grp=> grp.grpHostId === hostId && !db.ORDER.find(ord=>ord.grpId === grp.grpId));\n            if (emptyGroups) {\n                emptyGroups.map(eptGroup=> {\n                    let group = that.createClassGroupByGroupId(eptGroup.grpId);\n                    groupedOrders.push({group, orders: []});\n                    groupedOrderSums.push({group, orderSums: []});\n                });\n            }\n            resolve({\n                groupedOrders,\n                groupedOrderSums: groupedOrderSums\n            });\n        });\n    };\n\n    this.formatOrders = function (groupedOrders, callback) {\n        let groupedOrderSums = [];\n        //console.log('groups',db.GROUP);\n        //console.log('groupedOrdersgroupedOrdersgroupedOrders:', JSON.stringify(groupedOrders));\n\n        for (let {group, orders} of groupedOrders) {\n            let orderSums = [];\n\n            for (let {ordId, group, usrId, dish, ordNum, ordStatus} of orders) {\n                //如果存在直接加\n                let order = orderSums.find(orm=>orm.dish.dihId === dish.dihId);\n\n                if (order) {\n                    order.ordNum += ordNum;\n                } else {\n                    orderSums.push({group, dish, ordNum});\n                }\n            }\n\n            switch (group.grpStatus) {\n                case 0:\n                    group.grpStatusCh = \"未達外送金額\";\n                    group.btnChangeStatusName = \"未開團\";\n                    group.grpNextStatus = 1;\n                    group.btnChangeStatusDisable = true;\n                    break;\n                case 1:\n                    group.grpStatusCh = \"已開團\";\n                    group.btnChangeStatusName = \"確認已送達\";\n                    group.grpNextStatus = 2;\n                    break;\n                case 2:\n                    group.grpStatusCh = \"已送達\";\n                    group.btnChangeStatusName = \"確認訂單已完成\";\n                    group.grpNextStatus = 3;\n                    break;\n                case 3:\n                    group.grpStatusCh = \"已完成\";\n                    group.btnChangeStatusName = \"重新開團\";\n                    group.grpNextStatus = 4;\n                    break;\n                case -1:\n                    group.grpStatusCh = \"開團失敗\";\n                    group.btnChangeStatusName = \"\";\n                    group.btnChangeStatusDisable = true;\n                    group.grpNextStatus = -2;\n                    break;\n            }\n\n            groupedOrderSums.push({group, orderSums});\n        }\n\n\n        callback(groupedOrderSums);\n    };\n\n    this.createClassMerchantById = function (metId) {\n        let result = _.cloneDeep(db.MERCHANT.find(merchant=>merchant.metId === metId));\n        result.menu = _.filter(db.DISH, (dish)=>dish.metId === metId);\n        return result;\n    };\n\n    this.createClassGroupByGroupId = function (grpId) {\n        let that = this;\n        let group = db.GROUP.find(g=>g.grpId === grpId);\n\n        if (!group) {\n            return null;\n        }\n\n        let menu = [];\n        let grpComments = [];\n        let grpDishes = _.filter(db.GROUP_DISHES, grh => grh.grpId === group.grpId).map(grh=> {\n                let grpDish = {};\n                grpDish.dish = _.find(db.DISH, dish=> dish.dihId === grh.dihId);\n                _.assign(grpDish, grh);\n                return grpDish;\n            }) || [];\n        grpDishes.map(grpDish=> {\n\n            //檢查是否已經存在DISH的分類.\n            let dihGroup = menu.find(dgp => dgp.dihType === grpDish.dish.dihType);\n            if (dihGroup) {\n                //已經有了就加入壹筆\n                dihGroup.dishes.push(grpDish.dish);\n            } else {\n                //如果沒有加入新的分類,和壹筆DISH\n                menu.push({dihType: grpDish.dish.dihType, dishes: [grpDish.dish]});\n            }\n        });\n\n        let merchant = db.MERCHANT.find(merchant => merchant.metId === group.metId);\n\n        // grpComments.push(db.GROUP_MEMBER.filter(g=>g.grpId === grpId));\n\n\n        let grpCom = db.GROUP_MEMBER.filter(g=>g.grpId === grpId);\n\n        for (let gc of grpCom) {\n            if (gc.comments) {\n                grpComments.push({\n                    gmrId: gc.gmrId,\n                    usrId: gc.usrId,\n                    usrName: gc.usrName,\n                    comStatus: gc.comStatus,\n                    comments: gc.comments\n                });\n            }\n        }\n\n\n        group = {\n            grpId: group.grpId,\n            grpAddr: group.grpAddr,\n            grpTime: new Date(group.grpTime).pattern('yyyy/MM/dd hh:mm:ss'),\n            grpHostName: (db.USER.find(user => user.usrId === group.grpHostId)).usrName,\n            merchant: merchant,\n            grpOrder: _.filter(db.GROUP_ORDER, (grr)=> grr.grpId === group.grpId) || [],\n            grpDishes: grpDishes,\n            grpHost: that.createUserByUserId(group.grpHostId),\n            grpStatus: group.grpStatus,\n            menu: menu,\n            grpCreateTime: new Date(group.grpCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\n            grpAmount: group.grpAmount || 0,\n            grpReachRatePercent: 100 * ((group.grpAmount || 0) / merchant.metMinPrice > 1 ? 1 : (group.grpAmount || 0) / merchant.metMinPrice),\n            grpAmountLimit: group.grpAmountLimit,\n            grpComments: grpComments\n        };\n\n        return group;\n    };\n\n    this.createUserByUserId = function (usrId) {\n        let _usr = db.USER.find(usr=>usr.usrId === usrId);\n        let user = {\n            usrId: _usr.usrId,\n            usrName: _usr.usrName,\n            usrMobi: _usr.usrMobi\n        };\n\n        return user;\n    };\n\n    this.updateGroupStatusPromise = function (grpId, grpStatus) {\n        return new Promise((resolve, reject)=> {\n            let group = db.GROUP.find(s=>grpId === s.grpId);\n\n            if (group.grpStatus >= 0 && group.grpStatus <= 2) {\n                db.setValueToDb('GROUP', row=>row.grpId === group.grpId, 'grpStatus', grpStatus);\n                //group.grpStatus = grpStatus;\n\n                resolve({success: 1});\n            }\n            else {\n                reject({success: 0});\n            }\n        });\n\n    };\n\n    this.cleanGroup = function () {\n        let today = new Date();\n\n        this.allGroup(function (result) {\n            //let timing = result[0].grpTime.replace(/月/,\"/\");\n            //console.log(result[0].grpTime);\n            //console.log(JSON.stringify(result));\n        });\n\n\n        //let t = setTimeout('Timer()', 500);\n    };\n\n    this.getStatus = function (grpId) {\n        return new Promise(resolve=> {\n            let status = db.GROUP.find(g=>grpId === g.grpId).grpStatus;\n            resolve(status);\n        });\n    };\n\n    this.getComment = function (gmrId, comStatus) {\n        return new Promise(resolve=> {\n            //TODO\n            let comments = db.GROUP_MEMBER.find(g=>g.grpId === grpId && g.usrId === usrId).comments;\n            resolve(comments);\n        });\n    };\n\n    this.updateOrdStatusPromise = function (ordId, ordStatus) {\n        //一次只能修改一個ordId的ordStatus\n        return new Promise((resolve, reject)=> {\n            let order = db.ORDER.find(s=>ordId === s.ordId);\n\n            if (order.ordStatus === 3 && ordStatus === -1) {\n                db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'ordStatus', 1);\n                db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'updateOrdNum', undefined);\n                return;\n            }\n\n            if (order.ordStatus != -1) {\n                db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'ordStatus', ordStatus);\n                if (order.updateOrdNum && order.updateOrdNum !== 0) {\n                    // console.log('updateOrdStatusPromise====order.updateOrdNum', order.updateOrdNum);\n                    db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'ordNum', order.ordNum + order.updateOrdNum);\n                    db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'updateOrdNum', undefined);\n                }\n                resolve({success: 1});\n            } else {\n                reject({success: 0});\n            }\n        });\n    };\n\n    this.getGrpUsersOrdersByHostIdPromise = function (hostId, from) {\n        //from :  0=> confirmOrder  , 1=>productDetail\n        return new Promise(resolve=> {\n            switch (from) {\n                case 0:\n                {\n                    self.confirmOrder(hostId).then(result=> {\n                        //  WHAT THE FUCK\n                        // console.log('switch 0');\n                        let GrpUsersOrders = self.convertGroupedOrdersToGrpUsrOrders([0, 3], result).GrpUsersOrders.filter(function (guo) {\n                            // guo.usrOrders = guo.usrOrders.filter(uo=>uo.ordStatus === 0);\n                            // console.log('====guo.usrOrders:' + JSON.stringify(guo.usrOrders));\n                            return guo.usrOrders.length !== 0 && guo.group.grpStatus !== -1;\n                        });\n                        // console.log('====GrpUsersOrders:' + JSON.stringify(GrpUsersOrders));\n                        resolve({GrpUsersOrders: GrpUsersOrders});\n                    });\n                    break;\n                }\n                case 1:\n                {\n                    self.getGroupedOrdersAndSumsByHostIdPromise(hostId).then(result=> {\n                        // console.log('switch 1');\n                        let GrpUsersOrders = self.convertGroupedOrdersToGrpUsrOrders([1, 2, 3], result);\n                        // console.log('====GrpUsersOrders:' + JSON.stringify(GrpUsersOrders));\n                        resolve(GrpUsersOrders);\n                    });\n                    break;\n                }\n            }\n        });\n    };\n\n    this.convertGroupedOrdersToGrpUsrOrders = function (ordStatus, result) {\n        let GrpUsersOrders = {\n            GrpUsersOrders: []\n        };\n        // console.log('====result:' + JSON.stringify(result.groupedOrders));\n\n        for (let grpOrd of result.groupedOrders) {\n            let uos = [];\n            let grpComments = grpOrd.group.grpComments;\n\n            for (let order of grpOrd.orders) {\n                // console.log(_.includes(ordStatus, order.ordStatus));\n                if (_.includes(ordStatus, order.ordStatus)) {\n\n                    order.dish.ordNum = order.ordNum;\n                    order.ordNum = undefined;\n                    // console.log('====order:' + JSON.stringify(order));\n\n                    let uosobj = uos.find(u=>u.usrId === order.usrId);\n                    if (!uosobj) {\n                        uos.push({\n                            usrId: order.usrId,\n                            usrName: order.usrName,\n                            usrAmount: order.dish.ordNum * order.dish.dihPrice,\n                            // ordStatus: order.ordStatus,\n                            usrDishes: [{\n                                dihId: order.dish.dihId,\n                                dihName: order.dish.dihName,\n                                metId: order.dish.metId,\n                                dihType: order.dish.dihType,\n                                dihPrice: order.dish.dihPrice,\n                                ordNum: order.dish.ordNum,\n                                updateOrdNum: order.updateOrdNum ? order.updateOrdNum : undefined,\n                            }],\n                            usrComments: _.filter(grpComments, (com) => com.usrId === order.usrId),\n                            usrOrds: [{ordId: order.ordId, ordStatus: order.ordStatus}]\n                            // 無法理解錯在哪裡\n                            // ,usrDishesWhy: [order.dish]\n                        });\n                        // console.log('====order.dish:' + JSON.stringify(order.dish));\n\n                    } else {\n                        uosobj.usrAmount = uosobj.usrAmount + order.dish.ordNum * order.dish.dihPrice;\n                        // uosobj.usrDishes.push(order.dish);\n                        uosobj.usrDishes.push({\n                            dihId: order.dish.dihId,\n                            dihName: order.dish.dihName,\n                            metId: order.dish.metId,\n                            dihType: order.dish.dihType,\n                            dihPrice: order.dish.dihPrice,\n                            ordNum: order.dish.ordNum,\n                            updateOrdNum: order.updateOrdNum ? order.updateOrdNum : undefined,\n                        });\n                        uosobj.usrOrds.push({ordId: order.ordId, ordStatus: order.ordStatus});\n                    }\n                }\n            }\n            GrpUsersOrders.GrpUsersOrders.push({\n                group: grpOrd.group,\n                usrOrders: uos\n            });\n        }\n\n        // console.log('====GrpUsersOrders:' + JSON.stringify(GrpUsersOrders));\n        return GrpUsersOrders;\n    };\n\n    this.sendMail = function (usrMail, subject, html) {\n\n        if (usrMail && subject && html) {\n            mailTransport.sendMail({\n                from: 'o.grpbuy@gmail.com',\n                to: usrMail,\n                subject: subject,\n                html: html\n            }, function (err) {\n                if (err) {\n                    console.log('Unable to send email: ' + err);\n                }\n            });\n        }\n    };\n\n    this.refuseOrder = function (usrId, grpId, usrOrds, callback) {\n        //TODO  use ordId 、usrOrds\n        let orders = db.ORDER.filter(ord => ord.usrId === usrId && ord.grpId === grpId);\n        console.log('====usrOrds', JSON.stringify(usrOrds));\n        if (orders) {\n            let dishes = '';\n            for (let order of orders) {\n                let dihName = db.DISH.find(dih=>dih.dihId === order.dihId).dihName;\n                dishes += '<li>' + dihName + '  ' + order.ordNum + '份</li>'\n            }\n            // console.log(JSON.stringify(orders));\n            console.log('====dishes', dishes);\n\n            let g = db.GROUP.find(g=>g.grpId === grpId);\n            let metId = g.metId;\n            let metName = db.MERCHANT.find(m=>m.metId === metId).metName;\n            let ordCreateTime = orders[0].ordCreateTime;\n            let hostName = db.USER.find(usr=>usr.usrId === g.grpHostId).usrName;\n\n            // 通知團員訂單被拒絕\n            let usrMail = db.USER.find(usr=>usr.usrId === usrId).usrMail;\n            let subject = '販團 : 很不幸的 - 您的申請遭到拒絕';\n            let jointime = new Date(ordCreateTime);\n\n            let html = '<p>申請時間: ' + (jointime.getMonth() + 1) + '/' + jointime.getDate() + ' ' + jointime.getHours() + ':' + (jointime.getMinutes() < 10 ? '0' + jointime.getMinutes() : jointime.getMinutes()) + '</p>' +\n                '<p>申請團購: ' + metName + '</p>' +\n                '<p>團主 : ' + hostName + '</p>' +\n                '<br><p>訂購項目: </p><ul>' + dishes + '</ul>' +\n                '<br><br><br><p>信件由販團系統自動發送: <a href=\"http://bit.do/groupbuy\">http://bit.do/groupbuy</a> </p>';\n\n            console.log('usrMail , metName ', usrMail, metName);\n\n            self.sendMail(usrMail, subject, html);\n\n            callback({success: 1});\n        }\n        else {\n            callback({success: 0});\n        }\n    };\n\n    ///////////////////後臺\n\n    //給資料表新增壹個row\n    app.post('/:adminPwd/table/:tableName', function (req, res) {\n        if (req.params.adminPwd !== 'fHfKJp3iSAfhvd9fjn23Z5KMA6Sd') {\n            res.json({success: false});\n        }\n\n        try {\n            req.body = JSON.parse(req.body.data);\n            let rows = req.body.rows;\n            for (let row of rows) {\n                db.pushToDb(req.params.tableName, row);\n            }\n            res.json({success: true});\n        } catch (e) {\n\n            res.json({success: false});\n        }\n\n\n    });\n\n\n};\nlet server = new Server();\nmodule.exports = Server;"],"sourceRoot":"/source/"}