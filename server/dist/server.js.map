{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["'use strict';\n\n/**\n * Created by User on 2016/3/24.\n */\n\nrequire('source-map-support').install();\n\nconst isDebug = true;\nconst fakeAuthCode = true;\n\nconst _ = require('lodash');\n//let db = require('./mock-db');\nconst path = require('path');\n\nlet JsonDB = require('node-json-db');\n\n//debugger;\nlet jsonDb = new JsonDB(\"./onigiri\", true, true);\nlet db = jsonDb.getData('/db');\nrequire('./time.js');\n\n//console.log(__dirname);\n\n//let twilio = require('twilio');\n//const twilio = require(\"./twilio/lib\");\n//let client = new twilio.RestClient(accountSid, authToken);\n\nlet client = require('twilio')(\"AC7161db8bee36103cc7d6c29fe33404ec\", \"1c76b95b0c1f28236cb262e6b32ba8ab\");\n\nlet authCodes = []; //{phone  : String , authCode: String , endTime : Number , triedTimes:Numbers}\n\n//let commemtArrary = [];\n//let commentId;\n\ndb.pushToJsonDb = function (table, value) {\n    jsonDb.push('/db/' + table + '[]', value);\n    //    db[table].push(value);\n};\n\ndb.setValueToJsonDb = function (table, condition, setKey, newValue) {\n    let index = db[table].findIndex(condition);\n    let oldObj = db[table].find(condition);\n    oldObj[setKey] = newValue;\n\n    jsonDb.push('/db/' + table + `[${index}]`, oldObj);\n    //    db[table].push(value);\n};\n\n//CLEAN GROUP 刪掉超時的\n(()=> {\n    setInterval(()=> {\n        //得到所有沒過期的團\n        let availableGroups = _.filter(db.GROUP, grp=>grp.grpStatus === 0 || grp.grpStatus === 1);\n\n        for (let g of availableGroups) {\n            let deadLine = new Date(g.grpTime);\n            if (deadLine.getTime() - new Date().getTime() < 0) {\n                db.setValueToJsonDb('GROUP', row=>row.grpId === g.grpId, 'grpStatus', -1);\n            }\n        }\n    }, 5000);\n\n})();\n\nvar Server = function () {\n\n    this.testMode = function () {\n        if (isDebug) {\n            db.pushToJsonDb = function (table, value) {\n                db[table].push(value);\n            };\n        }\n    };\n\n    var express = require('express');\n    var bodyParser = require('body-parser');\n//var db = require('/batabase.js');\n\n    var app = express();\n\n\n    var self = this;\n\n    this.db = isDebug ? db : undefined;\n\n\n    var allowCrossDomain = function (req, res, next) {\n        res.header('Access-Control-Allow-Origin', '*');\n        res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n        res.header('Access-Control-Allow-Headers', 'Content-Type');\n        next();\n    };\n\n\n    app.use(allowCrossDomain);//CORS middleware\n    app.use(bodyParser.urlencoded({extended: false}));\n\n    app.use(express.static('public'));\n    app.use(bodyParser.urlencoded({extended: false}));\n\n    app.get('/db', function (req, res) {\n        if (isDebug) {\n            res.json(db);\n        }\n    });\n\n    app.post('/addUser', function (req, res) {\n\n            req.body = JSON.parse(req.body.data);\n\n            let usrName = req.body.usrName;\n            let usrPwd = req.body.usrPwd;\n            let usrMobi = req.body.usrMobi;\n            let authCode = req.body.authCode;\n\n\n            if (!usrName || !usrPwd || !usrMobi || !authCode) {\n                res.json({success: false, msg: '資料填寫不完整!'});\n                return;\n            }\n\n            let result = authCodes.find(obj=>obj.phone === usrMobi);\n            if (!result) {\n                res.json({success: false, msg: '請驗證手機號碼'});\n                return;\n            } else if (result.authCode !== authCode) {\n                result.triedTimes++;\n                if (result.triedTimes === 3) {\n                    authCodes.splice(authCodes.findIndex(obj=>obj.phone === usrMobi), 1);\n                }\n                res.json({success: false, msg: '驗證碼輸入錯誤'});\n                return;\n            } else if (db.USER.find(o=>o.usrName === usrName)) {\n                res.json({success: false, msg: '帳號名稱重複'});\n                return;\n            }\n\n\n            //console.log(JSON.stringify(req.body));\n            self.addUser(usrName, usrPwd, usrMobi, function (result) {\n                res.json(result);\n            });\n        }\n    );\n\n    app.post('/merchant', function (req, res) {\n\n            req.body = JSON.parse(req.body.data);\n\n            let metName = req.body.metName;\n            let metPhone = req.body.metPhone;\n            let metMinPrice = Number(req.body.metMinPrice);\n            let metPicUrl = req.body.metPicUrl || '';\n            let metType = req.body.metType || '其他';\n\n\n            if (!(metName && metPhone && metMinPrice && metMinPrice >= 0)) {\n                res.json({success: false, msg: '資料輸入錯誤'});\n                return;\n            }\n\n            self.addMerchantPromise({metName, metPhone, metMinPrice, metPicUrl, metType}).then((merchant)=> {\n                res.json({success: true, merchant});\n            }).catch(()=>res.json({success: false}));\n\n        }\n    );\n\n    app.post('/dishes', function (req, res) {\n\n            req.body = JSON.parse(req.body.data);\n\n            console.log(JSON.stringify(req.body));\n\n            for (let dish of req.body) {\n                dish.dihPrice = Number(dish.dihPrice);\n\n                if (!(dish.dihName && dish.dihPrice && dish.metId)) {\n                    res.json({success: false, msg: '資料不完整'});\n                    return;\n                }\n\n                if (dish.dihPrice < 0) {\n                    res.json({success: false, msg: '商品價格不正確'});\n                    return;\n                }\n            }\n\n            req.body = req.body.map(row=> {\n                row.dihType = row.dihType || '主食';\n                return row;\n            });\n\n\n            self.addDishPromise(req.body).then((result)=> {\n                res.json({success: true, dishes: result});\n            }).catch(()=>res.json({success: false}));\n\n        }\n    );\n\n    app.post('/userAuth', function (req, res) {\n            var usrName = req.body.usrName;\n            var usrPwd = req.body.usrPwd;\n\n            if (!(usrName && usrPwd)) {\n                res.json({success: false, msg: '資料不完整'});\n                return;\n            }\n\n            //console.log(JSON.stringify(req.body));\n\n            self.userAuth(usrName, usrPwd, function (result) {\n                res.json(result);\n            });\n\n        }\n    );\n\n    app.get('/allGroup', function (req, res) {\n        // Pass to next layer of middleware\n        self.allAvailableGroup(function (result) {\n            res.json(result);\n        });\n    });\n\n    app.get('/groupById/:id', (req, res)=> {\n        self.getGroupById(Number(req.params.id), result=>res.json(result));\n    });\n\n    app.get('/unjoinedGroups/:usrId', (req, res)=> {\n        self.getUnjoinedGroups(Number(req.params.usrId), result=>res.json(result));\n    });\n\n    app.get('/allMerchant', function (req, res) {\n        // Pass to next layer of middleware\n        self.allMerchant(function (result) {\n            res.json(result);\n        });\n    });\n\n    app.get('/merchantById/:id', function (req, res) {\n        // Pass to next layer of middleware\n\n        self.getMerchantById(Number(req.params.id), function (result) {\n            res.json(result);\n        });\n    });\n\n    app.post('/group', function (req, res) {\n\n            //console.log(req.body);\n\n            req.body = JSON.parse(req.body.data);\n            let grpHostId = Number(req.body.grpHostId);\n            let dishes = req.body.dishes;\n            let metId = Number(req.body.metId);\n            let addr = req.body.addr;\n            let gorTime = req.body.gorTime;\n            let grpAmountLimit = Number(req.body.grpAmountLimit) || 0;\n\n            //TODO Check Time\n            let deadLine = new Date(gorTime.replace(/(\\d*)年(\\d*)月(\\d*)日\\,/gi, '$1/$2/$3'));\n            gorTime = deadLine.getTime();\n\n            if (gorTime < new Date().getTime()) {\n                res.json({success: false, msg: '截止時間不能早於當前時間'});\n                return;\n            }\n\n\n            if (!( grpHostId && dishes && metId && addr && gorTime)) {\n                res.json({success: false, msg: '資料不完整'});\n                return;\n\n            }\n\n\n            self.postGroup(grpHostId, dishes, metId, addr, gorTime, grpAmountLimit, function (result) {\n                res.json(result);\n            });\n\n        }\n    );\n\n    app.post('/joinGroup', function (req, res) {\n            req.body = JSON.parse(req.body.data);\n            let usrId = Number(req.body.usrId);\n            let dishes = req.body.dishes;\n            let grpId = req.body.grpId;\n            let comments = req.body.comments;\n\n            if (!(usrId && dishes && dishes.length !== 0 && grpId)) {\n                res.json({success: false, msg: '資料不完整'});\n                return;\n            }\n\n\n            self.joinGroupPromise(usrId, dishes, grpId, comments).then(result=> {\n                res.json(result);\n            }).catch(e=> {\n                console.log(e);\n                res.json(e);\n            });\n\n        }\n    );\n\n    app.post('/groupStatus', function (req, res) {\n            req.body = JSON.parse(req.body.data);\n            let grpId = Number(req.body.grpId);\n            let grpStatus = Number(req.body.grpStatus);\n            if (!(grpId && grpStatus)) {\n                res.json({success: false, msg: '資料不完整'});\n                return;\n            }\n\n            self.updateGroupStatusPromise(grpId, grpStatus).then(result=> {\n                res.json(result);\n            }).catch(e=> {\n                res.json(e);\n            });\n\n        }\n    );\n\n    app.post('/mobiAuth', function (req, res) {\n            let usrMobi = req.body.data;\n            if (!usrMobi) {\n                res.json({success: false, msg: '資料不完整'});\n                return;\n            }\n\n            self.getTwilioCode(usrMobi).then(result=> {\n                res.json({success: true});\n            }).catch(e=> {\n                res.json(e);\n            });\n\n        }\n    );\n\n\n    app.get('/groupedOrdersByUserId/:id', function (req, res) {\n            var usrId = Number(req.params.id);\n            self.getGroupedOrdersByUserId(usrId, result=> {\n                //console.log(result);\n                res.json(result);\n            });\n        }\n    );\n\n    app.get('/groupedOrdersAndSumsByHostId/:id', function (req, res) {\n            var usrId = Number(req.params.id);\n\n            self.getGroupedOrdersAndSumsByHostIdPromise(usrId).then(result=>res.json(result));\n        }\n    );\n\n    app.post('/updateOrdStatus', function (req, res) {\n        req.body = JSON.parse(req.body.data);\n        let ordId = Number(req.body.ordId);\n        let ordStatus = Number(req.body.ordStatus);\n        // console.log(\"ordId:\" + ordId + \",ordStatus:\" + ordStatus);\n\n        self.updateOrdStatusPromise(ordId, ordStatus).then(result=> {\n            res.json(result);\n        }).catch(e=> {\n            res.json(e);\n        });\n    });\n\n    app.get('/confirmOrder/:id', function (req, res) {\n        let usrId = Number(req.params.id);\n\n        self.confirmOrder(usrId).then(result=>res.json(result));\n    });\n\n    app.get('/grpUsersOrdersByHostId/:hostId', function (req, res) {\n        let hostId = Number(req.params.hostId);\n        let from = Number(req.query.from);\n        self.getGrpUsersOrdersByHostIdPromise(hostId, from).then(result=>res.json(result));\n    });\n\n    app.post('/getGrpMember', function (req, res) {\n        req.body = JSON.parse(req.body.data);\n        let gmrId = Number(req.body.gmrId);\n        let comStatus = Number(req.body.comStatus);\n\n        self.getComment(gmrId, comStatus).then(result=> {\n            res.json(result);\n        }).catch(e=> {\n            res.json(e);\n        });\n\n    });\n\n\n    app.listen(8080, function () {\n        console.log('' +\n            'app listening on port 8080!');\n    });\n\n    this.addDishPromise = function (dishes) {\n\n        return new Promise((resolve, reject)=> {\n            for (let dish of dishes) {\n                dish.dihId = _.maxBy(db.DISH, \"dihId\").dihId + 1;\n                db.pushToJsonDb('DISH', dish);\n            }\n            resolve(dishes);\n        });\n    };\n\n    this.getTwilioCode = function (userMobi) {\n        return new Promise(function (resolve, reject) {\n            var min = 100;\n            var max = 999;\n            var randomAuth = Math.floor(Math.random() * (max - min + 1) + min) + '';\n            if (fakeAuthCode) {\n                randomAuth = '123';\n                resolve('123');\n                authCodes.push({\n                    phone: userMobi,\n                    authCode: randomAuth,\n                    endTime: new Date().getTime() + 1000 * 60 * 5,\n                    triedTimes: 0\n                });\n\n                setTimeout(()=> {\n                    let indexOfAuthCode = authCodes.findIndex(obj=>obj.authCode === authCodes);\n                    if (indexOfAuthCode) {\n                        authCodes.splice(indexOfAuthCode, 1);\n                    }\n                }, 1000 * 60 * 5);\n                return;\n            }\n\n            client.messages.create({\n                body: '您的販團驗證碼是' + randomAuth,\n                to: '+886' + userMobi,  // Text this number\n                from: '+13342030485' // From a valid Twilio number\n            }, function (err, message) {\n                if (err) {\n                    console.log(err);\n                    reject(randomAuth);\n                } else {\n                    console.log(message && message.sid);\n                    resolve(randomAuth);\n                    authCodes.push({\n                        phone: userMobi,\n                        authCode: randomAuth,\n                        endTime: new Date().getTime() + 1000 * 60 * 5,\n                        triedTimes: 0\n                    });\n\n                    setTimeout(()=> {\n                        let indexOfAuthCode = authCodes.findIndex(obj=>obj.authCode === authCodes);\n                        if (indexOfAuthCode) {\n                            authCodes.splice(indexOfAuthCode, 1);\n                        }\n                    }, 1000 * 60 * 5);\n                }\n            });\n\n\n        });\n    };\n\n    this.addUser = function (usrName, usrPwd, usrMobi, callback) {\n        var usrId = 0;\n\n        for (let user of db.USER) {\n            if (user.usrId > usrId) {\n                usrId = user.usrId;\n            }\n            usrId = Number(usrId) + 1;\n        }\n\n\n        var usrCreateTime = new Date().toString();\n        var newUser = {\n            usrId: usrId,\n            usrName: usrName,\n            usrPwd: usrPwd,\n            usrCreateTime: usrCreateTime,\n            usrMobi: usrMobi\n        };\n\n\n        if (newUser.usrName.length !== 0 && newUser.usrPwd.length !== 0 && newUser.usrMobi.length === 10) {\n            db.pushToJsonDb('USER', newUser);\n            callback({success: true});\n        } else {\n            callback({success: false});\n        }\n    };\n\n    /*\n     * 參數\n     {metName,\n     metPhone,\n     metMinPrice,\n     metPicUrl,\n     metType}\n     */\n\n    this.addMerchantPromise = function (merchant) {\n        return new Promise((resolve, reject)=> {\n            merchant.metId = _.maxBy(db.MERCHANT, 'metId').metId + 1;\n\n            db.pushToJsonDb('MERCHANT', merchant);\n\n            resolve(merchant);\n\n        });\n    };\n\n    this.userAuth = function (usrName, usrPwd, callback) {\n        var isSuccess = false;\n        for (var index in db.USER) {\n            if (db.USER[index].usrName == usrName && db.USER[index].usrPwd == usrPwd) {\n                callback({\n                    success: 1,\n                    user: {\n                        usrName: db.USER[index].usrName,\n                        usrId: db.USER[index].usrId,\n                        usrMobi: db.USER[index].usrMobi\n                    }\n                });\n                return;\n            }\n        }\n\n        if (!isSuccess) {\n            callback({success: false, err: '帳號密碼不匹配'});\n        }\n    };\n\n    //unjoined and available groups by user id\n    this.getUnjoinedGroups = function (usrId, callback) {\n        let that = this;\n\n        let joinedGroupIds = _.uniqBy(db.ORDER.filter(ord=>ord.usrId === usrId), 'grpId').map(ord=>ord.grpId);\n\n        //包含了已经结束的团\n        let allUnjoinedGroups = db.GROUP.filter(grp=> !joinedGroupIds.find(grpId=>grpId === grp.grpId));\n\n        //并不是标准类别\n        let unjoinedAndAvailable = allUnjoinedGroups.filter(g=>g.grpStatus === 0 || g.grpStatus === 1);\n\n        let stdGroups = unjoinedAndAvailable.map(g=>that.createClassGroupByGroupId(g.grpId));\n\n\n        callback(_.sortBy(stdGroups, row=>-new Date(row.grpTime)));\n    };\n\n    this.allGroup = function (callback) {\n        let result = [];\n\n        for (let _group of db.GROUP) {\n            let group = this.createClassGroupByGroupId(_group.grpId);\n            result.push(group);\n\n        }\n        callback(result);\n    };\n\n    this.allAvailableGroup = function (callback) {\n        let result = [];\n\n        for (let _group of db.GROUP.filter(g=>g.grpStatus === 0 || g.grpStatus === 1)) {\n            let group = this.createClassGroupByGroupId(_group.grpId);\n            result.push(group);\n        }\n\n        callback(_.sortBy(result, row=>-new Date(row.grpTime)));\n    };\n\n    this.getGroupById = function (id, callback) {\n        let group = this.createClassGroupByGroupId(id);\n        callback(group);\n    };\n\n\n    this.allMerchant = function (callback) {\n        var result = [];\n        for (let _merchant of db.MERCHANT) {\n            let merchant = this.createClassMerchantById(_merchant.metId);\n            result.push(\n                merchant\n            );\n        }\n        callback(result);\n    };\n\n\n    this.getMerchantById = function (id, callback) {\n        let merchant = this.createClassMerchantById(id);\n        callback(merchant);\n    };\n\n    this.postGroup = function (grpHostId, dishes, metId, addr, gorTime, grpAmountLimit, callback) {\n        let lastGroup = _.maxBy(db.GROUP, 'grpId');\n        let grpId = lastGroup ? lastGroup.grpId + 1 : 1;\n        db.pushToJsonDb('GROUP', {\n            grpId,\n            grpHostId: grpHostId,\n            metId: metId,\n            grpAddr: addr,\n            grpTime: gorTime,\n            grpStatus: 0,\n            grpCreateTime: new Date().getTime(),\n            grpAmount: 0,\n            grpAmountLimit: grpAmountLimit || 0\n\n            //minAmount: minAmount\n        });\n        for (let dihId of dishes) {\n            let lastDish = _.maxBy(db.GROUP_DISHES, 'gdeId');\n            let gdh = {\n                gdeId: lastDish ? lastDish.gdeId + 1 : 1,\n                dihId: Number(dihId),\n                grpId\n            };\n            db.pushToJsonDb(\"GROUP_DISHES\", gdh);\n        }\n        callback({success: 1});\n    };\n\n    this.joinGroupPromise = function (usrId, dishes, grpId, comments) {\n        //console.log(JSON.stringify({usrId, dishes, grpId}));\n        return new Promise((resolve, reject)=> {\n            //拒絕用戶對同壹個group連續點兩次餐點\n            //if (db.ORDER.find(ord=>ord.usrId === usrId && ord.grpId === grpId)) {\n            //    reject(\"重復加團!\");\n            //    return;\n            //}\n\n            //只有0,1状态的团可以团购\n            if (!_.includes([0, 1], db.GROUP.find(grp=>grp.grpId === grpId).grpStatus)) {\n                reject(\"團購已經截止!\");\n                return;\n            }\n            let usrName = db.USER.find(usr=>usr.usrId === usrId).usrName;\n\n            //是否超过最高上限\n            let amountThisTime = 0;\n            let funcFindDish = dih=> d=>d.dihId === dih.dihId;\n            for (let dih of dishes) {\n                amountThisTime += db.DISH.find(funcFindDish(dih)).dihPrice * dih.num;\n            }\n            let grpAmountLimit = Number(db.GROUP.find(grp=>grp.grpId === grpId).grpAmountLimit);\n            let grpAmount = db.GROUP.find(grp=>grp.grpId === grpId).grpAmount;\n            if (grpAmountLimit!==0 && amountThisTime + grpAmount > grpAmountLimit) {\n                //團購上限\n                reject('超過團購上限! 超出' + (amountThisTime + grpAmount - grpAmountLimit) + '元');\n                return;\n            } else {\n                //最小外送金額\n                let g = db.GROUP.find(g=>g.grpId === grpId);\n                let metId = g.metId;\n                let metMinPrice = db.MERCHANT.find(m=>m.metId === metId).metMinPrice;\n                db.setValueToJsonDb(\"GROUP\", row=>row.grpId === grpId, \"grpAmount\", amountThisTime + grpAmount);\n                if (amountThisTime + grpAmount >= metMinPrice) {\n                    db.setValueToJsonDb(\"GROUP\", row=>row.grpId === grpId, \"grpStatus\", 1);\n                }\n\n            }\n\n\n            let orderedDishIds = _.chain(db.ORDER).filter(ord=>ord.usrId === usrId && ord.grpId === grpId).map(ord=>ord.dihId).value();\n            console.log('orderedDishIds', orderedDishIds);\n\n            let selectRowByDishId = dihId => row=>row.dihId === dihId;\n\n\n            for (let {dihId, num} of dishes) {\n                if (num === 0 || !_.isNumber(num)) {\n                    continue;\n                }\n\n\n                //加購\n                if (_.includes(orderedDishIds, dihId)) {\n\n                    let o = db.ORDER.find(function (ord) {\n                        if (ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId) {\n                            return ord;\n                        }\n                    });\n\n                    db.setValueToJsonDb('ORDER', ord => ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId, 'ordNum', num + o.ordNum);\n\n                    continue;\n                }\n\n\n                //新的一笔\n                let lastOrder = _.maxBy(db.ORDER, 'ordId');\n                db.pushToJsonDb(\"ORDER\", {\n                    ordId: lastOrder ? lastOrder.ordId + 1 : 1,\n                    grpId: grpId,\n                    usrId: usrId,\n                    usrName: usrName,  //07.03 add\n                    dihId: dihId,\n                    ordNum: num,\n                    ordCreateTime: new Date().getTime(),\n                    //TODO ordStatus為訂單狀態(-1:拒絕,0:待審查,1:已確認=未付款,2:已付款)\n                    ordStatus: 0\n                });\n\n\n            }\n\n            let lastGroupMember = _.maxBy(db.GROUP_MEMBER, gmr=>gmr.gmrId);\n            if (!comments) {\n                // console.log(\"commentscomments=\" + comments);\n                comments = \"\";\n            }\n            db.pushToJsonDb(\"GROUP_MEMBER\", {\n                gmrId: lastGroupMember ? lastGroupMember.gmrId + 1 : 1,\n                usrId: usrId,\n                usrName: usrName,  //07.03 add\n                grpId: grpId,\n                // comStatus: 0,\n                comments: comments\n            });\n\n            resolve({success: 1});\n\n        });\n    };\n\n    this.convertOrdersToGroupedOrders = function (orders) {\n        let groupedOrders = [];\n\n\n        for (let order of orders) {\n            // if (order.ordStatus > 0) {\n            // console.log(\"ordStatus:\" + order.ordStatus);\n            let tOrder = groupedOrders.find(gor=>gor.group.grpId === order.grpId);\n\n            if (tOrder) {\n                if (order.ordStatus > 0) {\n                    tOrder.orders.push(order);\n                }\n            } else {\n                let group = this.createClassGroupByGroupId(order.grpId);\n\n                if (order.ordStatus === 0) {\n                    group.ordNotConfirm = true;\n                    groupedOrders.push({group: group, orders: []});\n                } else {\n                    groupedOrders.push({group: group, orders: [order]});\n                }\n\n            }\n            // }\n        }\n        return _.sortBy(groupedOrders, row=>-new Date(row.group.grpTime));\n    };\n\n    this.convertOrdersToGroupedOrdersUsr = function (orders) {\n        let groupedOrders = [];\n        for (let order of orders) {\n            let tOrder = groupedOrders.find(gor=>gor.group.grpId === order.grpId);\n            if (tOrder) {\n                tOrder.orders.push(order);\n            } else {\n                let group = this.createClassGroupByGroupId(order.grpId);\n\n                //顯示給使用者的狀態\n                let status = '';\n\n                switch (group.grpStatus) {\n                    case 0:\n                    case 1:\n                        switch (order.ordStatus) {\n                            case -1:\n                                status = '被團主拒絕';\n                                break;\n                            case 0:\n                                status = '等待團主審查';\n                                break;\n                            case 1:\n                                if(group.grpStatus===0){\n                                    status = '已確認, 未達到起送金額';\n                                }else{\n                                    status = '等待商家配送';\n                                }\n                                break;\n                            case 2:\n                                status = '付款完成';\n                                break;\n                        }\n                        break;\n                    case 2:\n                        status = '已送達, 待付款';\n                        break;\n                    case 3:\n                        status = '已完成';\n                        break;\n                    case -1:\n                        status = '開團失敗';\n                        break;\n                }\n\n\n\n                groupedOrders.push({group: group, orders: [order],status:status});\n            }\n        }\n        return _.sortBy(groupedOrders, row=>-new Date(row.group.grpTime));\n    };\n\n\n    this.getGroupedOrdersByUserId = function (usrId, callback) {\n        let orders = _.sortBy(db.ORDER.filter(ord=>ord.usrId === usrId), obj=>-obj.ordCreateTime).map(ord=> {\n\n            let newOrd = {\n                ordId: ord.ordId,\n                grpId: ord.grpId,\n                usrId: ord.usrId,\n                usrName: ord.usrName,   //07.03 add\n                dish: db.DISH.find(d=>d.dihId === ord.dihId),\n                ordNum: ord.ordNum,\n                ordStatus: ord.ordStatus,    //07.03 add\n                ordCreateTime: new Date(ord.ordCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\n\n            };\n            return newOrd;\n        });\n\n        let groupedOrders =\n            self.convertOrdersToGroupedOrdersUsr(orders);\n        callback(groupedOrders);\n    };\n\n    this.getGroupedOrdersAndSumsByHostIdPromise = function (hostId) {\n        let that = this;\n\n        return new Promise(resolve=> {\n            let groupedOrders = [];\n            let groupedOrderSums = [];\n\n\n            let groupIds = db.GROUP.filter(grp=>grp.grpHostId === hostId);\n            let orders = db.ORDER.filter(ord=> {\n                //ord.grpId === groupId\n\n                return db.GROUP.find(grp=>grp.grpId === ord.grpId).grpHostId === hostId;\n            }).map(ord=> {\n\n                let newOrd = {\n                    ordId: ord.ordId,\n                    grpId: ord.grpId,\n                    usrId: ord.usrId,\n                    usrName: ord.usrName,   //07.03 add\n                    dish: db.DISH.find(d=>d.dihId === ord.dihId),\n                    ordNum: ord.ordNum,\n                    ordStatus: ord.ordStatus,    //07.03 add\n                    ordCreateTime: new Date(ord.ordCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\n                };\n\n                return newOrd;\n            });\n\n            //console.log('group',db.GROUP,'groupedOrders', orders);\n\n            groupedOrders =\n                self.convertOrdersToGroupedOrders(orders);\n\n            // console.log(\"ordersordersordersorders:\" + JSON.stringify(orders));\n            // console.log(\"groupedOrdersgroupedOrdersgroupedOrders:\" + JSON.stringify(groupedOrders));\n\n            self.formatOrders(groupedOrders, (result)=> {\n                groupedOrderSums = result;\n            });\n\n\n            //處理空白團\n            let emptyGroups = db.GROUP.filter(grp=> grp.grpHostId === hostId && !db.ORDER.find(ord=>ord.grpId === grp.grpId));\n            if (emptyGroups) {\n                emptyGroups.map(eptGroup=> {\n                    let group = that.createClassGroupByGroupId(eptGroup.grpId);\n                    groupedOrders.push({group, orders: []});\n                    groupedOrderSums.push({group, orderSums: []});\n                });\n            }\n\n            // console.log(\"groupedOrderSumsgroupedOrderSums:\" + JSON.stringify(groupedOrderSums));\n\n            resolve({\n                groupedOrders: _.orderBy(groupedOrders, obj=>obj.group.grpCreateTime, 'desc'),\n                // groupedOrderSums: _.sortBy(groupedOrderSums, obj=>obj.group.grpCreateTime)\n                groupedOrderSums: _.orderBy(groupedOrderSums, obj=>obj.group.grpCreateTime, 'desc')\n                // groupedOrderSums: groupedOrderSums\n            });\n        });\n    };\n\n    this.confirmOrder = function (hostId) {\n        let that = this;\n\n        return new Promise(resolve=> {\n            let groupedOrders = [];\n            let groupedOrderSums = [];\n\n            let groupIds = db.GROUP.filter(grp=>grp.grpHostId === hostId);\n            let orders = db.ORDER.filter(ord=> {\n\n                return db.GROUP.find(grp=>grp.grpId === ord.grpId).grpHostId === hostId;\n            }).map(ord=> {\n\n                let newOrd = {\n                    ordId: ord.ordId,\n                    grpId: ord.grpId,\n                    usrId: ord.usrId,\n                    usrName: ord.usrName,   //07.03 add\n                    dish: db.DISH.find(d=>d.dihId === ord.dihId),\n                    ordNum: ord.ordNum,\n                    ordStatus: ord.ordStatus,    //07.03 add\n                    ordCreateTime: new Date(ord.ordCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\n                };\n                return newOrd;\n            });\n\n            groupedOrders =\n                self.convertOrdersToGroupedOrdersUsr(orders);\n\n            self.formatOrders(groupedOrders, (result)=> {\n                groupedOrderSums = result;\n            });\n\n            //處理空白團\n            let emptyGroups = db.GROUP.filter(grp=> grp.grpHostId === hostId && !db.ORDER.find(ord=>ord.grpId === grp.grpId));\n            if (emptyGroups) {\n                emptyGroups.map(eptGroup=> {\n                    let group = that.createClassGroupByGroupId(eptGroup.grpId);\n                    groupedOrders.push({group, orders: []});\n                    groupedOrderSums.push({group, orderSums: []});\n                });\n            }\n            resolve({\n                groupedOrders,\n                groupedOrderSums: groupedOrderSums\n            });\n        });\n    };\n\n    this.formatOrders = function (groupedOrders, callback) {\n        let groupedOrderSums = [];\n        //console.log('groups',db.GROUP);\n        //console.log('groupedOrdersgroupedOrdersgroupedOrders:', JSON.stringify(groupedOrders));\n\n        for (let {group, orders} of groupedOrders) {\n            let orderSums = [];\n\n            for (let {ordId, group, usrId, dish, ordNum, ordStatus} of orders) {\n                //如果存在直接加\n                let order = orderSums.find(orm=>orm.dish.dihId === dish.dihId);\n\n                if (order) {\n                    order.ordNum += ordNum;\n                } else {\n                    orderSums.push({group, dish, ordNum});\n                }\n            }\n\n            switch (group.grpStatus) {\n                case 0:\n                    group.grpStatusCh = \"未達外送金額\";\n                    group.btnChangeStatusName = \"未開團\";\n                    group.grpNextStatus = 1;\n\n                    group.btnChangeStatusDisable = true;\n                    break;\n                case 1:\n                    group.grpStatusCh = \"已開團\";\n                    group.btnChangeStatusName = \"確認已送達\";\n                    group.grpNextStatus = 2;\n\n                    break;\n                case 2:\n                    group.grpStatusCh = \"已送達\";\n                    group.btnChangeStatusName = \"確認訂單已完成\";\n                    group.grpNextStatus = 3;\n                    break;\n                case 3:\n                    group.grpStatusCh = \"已完成\";\n                    group.btnChangeStatusName = \"重新開團\";\n                    group.grpNextStatus = 4;\n                    break;\n                case -1:\n                    group.grpStatusCh = \"開團失敗\";\n                    group.btnChangeStatusName = \"\";\n                    group.btnChangeStatusDisable = true;\n                    group.grpNextStatus = -2;\n                    break;\n            }\n\n            groupedOrderSums.push({group, orderSums});\n        }\n\n\n        callback(groupedOrderSums);\n    };\n\n    this.createClassMerchantById = function (metId) {\n        let result = _.cloneDeep(db.MERCHANT.find(merchant=>merchant.metId === metId));\n        result.menu = _.filter(db.DISH, (dish)=>dish.metId === metId);\n        return result;\n    };\n\n    this.createClassGroupByGroupId = function (grpId) {\n        let that = this;\n        let group = db.GROUP.find(g=>g.grpId === grpId);\n\n        if (!group) {\n            return null;\n        }\n\n        let menu = [];\n        let grpComments = [];\n        let grpDishes = _.filter(db.GROUP_DISHES, grh => grh.grpId === group.grpId).map(grh=> {\n                let grpDish = {};\n                grpDish.dish = _.find(db.DISH, dish=> dish.dihId === grh.dihId);\n                _.assign(grpDish, grh);\n                return grpDish;\n            }) || [];\n        grpDishes.map(grpDish=> {\n\n            //檢查是否已經存在DISH的分類.\n            let dihGroup = menu.find(dgp => dgp.dihType === grpDish.dish.dihType);\n            if (dihGroup) {\n                //已經有了就加入壹筆\n                dihGroup.dishes.push(grpDish.dish);\n            } else {\n                //如果沒有加入新的分類,和壹筆DISH\n                menu.push({dihType: grpDish.dish.dihType, dishes: [grpDish.dish]});\n            }\n        });\n\n        let merchant = db.MERCHANT.find(merchant => merchant.metId === group.metId);\n\n        // grpComments.push(db.GROUP_MEMBER.filter(g=>g.grpId === grpId));\n\n\n        let grpCom = db.GROUP_MEMBER.filter(g=>g.grpId === grpId);\n\n        for (let gc of grpCom) {\n            if (gc.comments) {\n                grpComments.push({\n                    gmrId: gc.gmrId,\n                    usrId: gc.usrId,\n                    usrName: gc.usrName,\n                    comStatus: gc.comStatus,\n                    comments: gc.comments\n                });\n            }\n        }\n\n\n        group = {\n            grpId: group.grpId,\n            grpAddr: group.grpAddr,\n            grpTime: new Date(group.grpTime).pattern('yyyy/MM/dd hh:mm:ss'),\n            grpHostName: (db.USER.find(user => user.usrId === group.grpHostId)).usrName,\n            merchant: merchant,\n            grpOrder: _.filter(db.GROUP_ORDER, (grr)=> grr.grpId === group.grpId) || [],\n            grpDishes: grpDishes,\n            grpHost: that.createUserByUserId(group.grpHostId),\n            grpStatus: group.grpStatus,\n            menu: menu,\n            grpCreateTime: new Date(group.grpCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\n            grpAmount: group.grpAmount || 0,\n            grpReachRatePercent: 100 * ((group.grpAmount || 0) / merchant.metMinPrice > 1 ? 1 : (group.grpAmount || 0) / merchant.metMinPrice),\n            grpAmountLimit: group.grpAmountLimit,\n            grpComments: grpComments\n        };\n\n        return group;\n    };\n\n    this.createUserByUserId = function (usrId) {\n        let _usr = db.USER.find(usr=>usr.usrId === usrId);\n        let user = {\n            usrId: _usr.usrId,\n            usrName: _usr.usrName,\n            usrMobi: _usr.usrMobi\n        };\n\n        return user;\n    };\n\n    this.updateGroupStatusPromise = function (grpId, grpStatus) {\n        return new Promise((resolve, reject)=> {\n            let group = db.GROUP.find(s=>grpId === s.grpId);\n\n            if (group.grpStatus >= 0 && group.grpStatus <= 2) {\n                db.setValueToJsonDb('GROUP', row=>row.grpId === group.grpId, 'grpStatus', grpStatus);\n                //group.grpStatus = grpStatus;\n\n                resolve({success: 1});\n            }\n            else {\n                reject({success: 0});\n            }\n        });\n\n    };\n\n    this.cleanGroup = function () {\n        let today = new Date();\n\n        this.allGroup(function (result) {\n            //let timing = result[0].grpTime.replace(/月/,\"/\");\n            //console.log(result[0].grpTime);\n            //console.log(JSON.stringify(result));\n        });\n\n\n        //let t = setTimeout('Timer()', 500);\n    };\n\n    this.getStatus = function (grpId) {\n        return new Promise(resolve=> {\n            let status = db.GROUP.find(g=>grpId === g.grpId).grpStatus;\n            resolve(status);\n        });\n    };\n\n    this.getComment = function (gmrId, comStatus) {\n        return new Promise(resolve=> {\n            //TODO\n            let comments = db.GROUP_MEMBER.find(g=>g.grpId === grpId && g.usrId === usrId).comments;\n            resolve(comments);\n        });\n    };\n\n    this.updateOrdStatusPromise = function (ordId, ordStatus) {\n        //一次只能修改一個ordId的ordStatus\n        return new Promise((resolve, reject)=> {\n            let order = db.ORDER.find(s=>ordId === s.ordId);\n\n            if (order.ordStatus != -1) {\n                db.setValueToJsonDb('ORDER', row=>row.ordId === order.ordId, 'ordStatus', ordStatus);\n                //group.grpStatus = grpStatus;\n                resolve({success: 1});\n\n            }\n            else {\n                reject({success: 0});\n            }\n        });\n    };\n\n    this.getGrpUsersOrdersByHostIdPromise = function (hostId, from) {\n        //from :  0=> confirmOrder  , 1=>productDetail\n        return new Promise(resolve=> {\n            switch (from) {\n                case 0:\n                {\n                    self.confirmOrder(hostId).then(result=> {\n                        // TODO WHAT THE FUCK\n                        console.log('switch 0');\n                        let GrpUsersOrders = self.convertGroupedOrdersToGrpUsrOrders(result).GrpUsersOrders.filter(function (guo) {\n                            guo.usrOrders = guo.usrOrders.filter(uo=>uo.ordStatus === 0);\n                            // console.log('====guo.usrOrders:' + JSON.stringify(guo.usrOrders));\n                            return guo.usrOrders.length !== 0;\n                        });\n                        // console.log('====GrpUsersOrders:' + JSON.stringify(GrpUsersOrders));\n                        resolve({GrpUsersOrders: GrpUsersOrders});\n                    });\n                    break;\n                }\n                case 1:\n                {\n                    self.getGroupedOrdersAndSumsByHostIdPromise(hostId).then(result=> {\n                        console.log('switch 1');\n                        let GrpUsersOrders = self.convertGroupedOrdersToGrpUsrOrders(result);\n                        // console.log('====GrpUsersOrders:' + JSON.stringify(GrpUsersOrders));\n                        resolve(GrpUsersOrders);\n                    });\n                    break;\n                }\n            }\n        });\n    };\n\n    this.convertGroupedOrdersToGrpUsrOrders = function (result) {\n        let GrpUsersOrders = {\n            GrpUsersOrders: []\n        };\n        // console.log('====result:' + JSON.stringify(result.groupedOrders));\n\n        for (let grpOrd of result.groupedOrders) {\n            let neGUO = {};\n            let uos = [];\n            let grpComments = grpOrd.group.grpComments;\n\n            for (let order of grpOrd.orders) {\n\n                order.dish.ordNum = order.ordNum;\n                order.ordNum = undefined;\n                // console.log('order.dish:' + JSON.stringify(order.dish));\n                // console.log('====order:' + JSON.stringify(order));\n\n                let uosobj = uos.find(u=>u.usrId === order.usrId);\n\n                if (!uosobj) {\n                    uos.push({\n                        usrId: order.usrId,\n                        usrName: order.usrName,\n                        usrAmount: order.dish.ordNum * order.dish.dihPrice,\n                        ordStatus: order.ordStatus,\n                        usrDishes: [{\n                            dihId: order.dish.dihId,\n                            dihName: order.dish.dihName,\n                            metId: order.dish.metId,\n                            dihType: order.dish.dihType,\n                            dihPrice: order.dish.dihPrice,\n                            ordNum: order.dish.ordNum\n                        }],\n                        usrComments: _.filter(grpComments, (com) => com.usrId === order.usrId),\n                        usrOrdIds: [{ordId: order.ordId}]\n                        // 無法理解錯在哪裡\n                        // ,usrDishesWhy: [order.dish]\n                    });\n                    // console.log('====order.dish:' + JSON.stringify(order.dish));\n\n                } else {\n                    uosobj.usrAmount = uosobj.usrAmount + order.dish.ordNum * order.dish.dihPrice;\n                    // uosobj.usrDishes.push(order.dish);\n                    uosobj.usrDishes.push({\n                        dihId: order.dish.dihId,\n                        dihName: order.dish.dihName,\n                        metId: order.dish.metId,\n                        dihType: order.dish.dihType,\n                        dihPrice: order.dish.dihPrice,\n                        ordNum: order.dish.ordNum\n                    });\n                    uosobj.usrOrdIds.push({ordId: order.ordId});\n                }\n            }\n            neGUO = {\n                group: grpOrd.group,\n                usrOrders: uos\n            };\n            GrpUsersOrders.GrpUsersOrders.push(neGUO);\n        }\n\n        // console.log('====GrpUsersOrders:' + JSON.stringify(GrpUsersOrders));\n        return GrpUsersOrders;\n    };\n\n    ///////////////////後臺\n\n    //給資料表新增壹個row\n    app.post('/:adminPwd/table/:tableName', function (req, res) {\n        if (req.params.adminPwd !== 'fHfKJp3iSAfhvd9fjn23Z5KMA6Sd') {\n            res.json({success: false});\n        }\n\n        try {\n            req.body = JSON.parse(req.body.data);\n            let rows = req.body.rows;\n            for (let row of rows) {\n                db.pushToJsonDb(req.params.tableName, row);\n            }\n            res.json({success: true});\n        } catch (e) {\n\n            res.json({success: false});\n        }\n\n\n    });\n\n\n}\n\n\nmodule.exports = new Server();\n"],"sourceRoot":"/source/"}